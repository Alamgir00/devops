
====================
 Install Docker
$  sudo apt update && apt -y install docker.io

 Install kubectl
$  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl &&   chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl

 Install Minikube
$  curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

 Start Minikube
$  apt install conntrack
$  minikube start --vm-driver=none
$  minikube status
=================================
PERSISTENT VOLUME
================================
apiVersion: v1
kind: PersistentVolume
metadata:
  name: myebsvol
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  awsElasticBlockStore:
    volumeID: vol-060a77c04ef9b76ae           # EBS VOLUME ID
    fsType: ext4
============
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myebsvolclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
==================================================================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pvdeploy
spec:
  replicas: 1
  selector:      # tells the controller which pods to watch/belong to
    matchLabels:
     app: mypv
  template:
    metadata:
      labels:
        app: mypv
    spec:
      containers:
      - name: shell
        image: centos
        command: ["bin/bash", "-c", "sleep 10000"]
        volumeMounts:
        - name: mypd
          mountPath: "/tmp/persistent"
      volumes:
        - name: mypd
          persistentVolumeClaim:
            claimName: myebsvolclaim
==========================================================================================================================
HEALTHCHECK/LIVENESSPROBE
==========================================================================================================================
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: mylivenessprobe
spec:
  containers:
  - name: liveness
    image: ubuntu
    args:
    - /bin/sh
    - -c
    - touch /tmp/healthy; sleep 1000
    livenessProbe:                                          
      exec:
        command:                                         
        - cat                
        - /tmp/healthy
      initialDelaySeconds: 5          
      periodSeconds: 5                                 
      timeoutSeconds: 30                              
-----------------------------------
    1  ls
    2  sudo apt update && apt -y install docker.io
    
    4  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release &&   chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl

    5  apt install conntrack
    6  minikube start --vm-driver=none
    7  minikube status
    8  vim mypv.yml
    9  kubectl apply -f mypv.yml
   10  kubectl get pv
   11  vim mypvc.yml
   12  kubectl apply -f mypvc.yml
   13  kubectl get pvc
   14  vim deploy.yml
   15  kubectl apply -f deploy.yml
   16  kubectl get pods
   17  kubectl get pv
   18  kubectl get pods
   19  kubectl exec -it -- /bin/bash
   20  kubectl exec  pvdeploy-8587567959-nmdng -it -- /bin/bash
   21  kubectl get pods
   22  kubectl delete pod pvdeploy-8587567959-nmdng
   23  kubectl get pods
   25  kubectl exec pvdeploy-8587567959-xl87g -it -- /bin/bash
   26  history
101346990255
